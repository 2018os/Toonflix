query collectionsForMain {
  collections(first: 4) {
    edges {
      node {
        id
        title
        writer {
          name
        }
        webtoonsConnection(first: 4) {
          pageInfo {
            hasNextPage
            hasPreviousPage
          }
          edges {
            node {
              ...webtoonCard
            }
          }
        }
      }
    }
  }
}

query webtoonForWebtoonDetail($id: ID!) {
  webtoon(id: $id) {
    id
    title
    description
    url
    thumbnail
    isPay
    isAdult
    isFinish
    platform
    authorsConnection(first: 4) {
      edges {
        node {
          id
          name
        }
      }
    }
    commentsConnection(first: 4) {
      counts
      edges {
        node {
          message
          createdAt
          writer {
            name
          }
        }
      }
    }
    collectionsConnection(first: 4) {
      pageInfo {
        hasPreviousPage
        hasNextPage
      }
      edges {
        node {
          ...collectionCard
        }
      }
    }
    genres {
      code
      name
      webtoonsConnection(first: 6, after: $id) {
        pageInfo {
          hasNextPage
          hasPreviousPage
        }
        edges {
          node {
            ...webtoonCard
          }
        }
      }
    }
  }
}

query randomWebtoonsForWebtoonDetail {
  randomWebtoons(take: 6) {
    id
    thumbnail
  }
}

query meForWithAuth {
  me {
    id
    name
    myCollections(first: 8) {
      edges {
        node {
          ...collectionCard
        }
      }
    }
    likedCollections(first: 8) {
      edges {
        node {
          ...collectionCard
        }
      }
    }
  }
}

mutation login($email: String!, $password: String!) {
  login(input: { email: $email, password: $password }) {
    token
    user {
      id
    }
  }
}

mutation signup($name: String!, $email: String!, $password: String!) {
  signup(input: { name: $name, email: $email, password: $password }) {
    token
    user {
      id
    }
  }
}

query collectionsForCollectionList($keyword: String, $after: ID) {
  collections(first: 3, keyword: $keyword, after: $after) {
    pageInfo {
      hasNextPage
      endCursor
    }
    edges {
      node {
        ...collectionCard
      }
    }
  }
}

query searchForCategory(
  $keyword: String
  $where: SearchFiltering
  $webtoonId: ID
  $collectionId: ID
) {
  search(
    keyword: $keyword
    where: $where
    webtoonPaging: { first: 10, after: $webtoonId }
    collectionPaging: { first: 10, after: $collectionId }
  ) {
    webtoonResult {
      pageInfo {
        endCursor
        hasNextPage
      }
      edges {
        node {
          ...webtoonCard
        }
      }
    }
    collectionResult {
      pageInfo {
        endCursor
        hasNextPage
      }
      edges {
        node {
          ...collectionCard
        }
      }
    }
  }
}

query genresForFilter {
  genres {
    code
    name
  }
}

query searchForAutoComplete($keyword: String) {
  search(
    keyword: $keyword
    webtoonPaging: { first: 3 }
    collectionPaging: { first: 3 }
  ) {
    webtoonResult {
      edges {
        node {
          id
          title
        }
      }
    }
    collectionResult {
      edges {
        node {
          id
          title
        }
      }
    }
  }
}

query collectionForCollectionDetail($id: ID!, $after: ID) {
  collection(id: $id) {
    id
    title
    description
    writer {
      name
    }
    webtoonsConnection(first: 4, after: $after) {
      pageInfo {
        hasNextPage
        endCursor
      }
      edges {
        node {
          ...webtoonCard
        }
      }
    }
  }
}

query randomWebtoonsForRandom {
  randomWebtoons(take: 8) {
    id
    thumbnail
  }
}

fragment webtoonCard on Webtoon {
  id
  title
  authorsConnection(first: 4) {
    edges {
      node {
        id
        name
      }
    }
  }
  genres {
    code
    name
  }
  isAdult
  isFinish
  isPay
  thumbnail
}

fragment collectionCard on Collection {
  id
  title
  webtoonsConnection(first: 4) {
    edges {
      node {
        id
        thumbnail
      }
    }
  }
}

query collectionForCollectionDetail(
  $id: ID!
  $afterWebtoonId: ID
  $afterCommentId: ID
) {
  collection(id: $id) {
    ...collection
  }
}

query searchForAddWebtoonsModal($keyword: String, $afterWebtoonId: ID) {
  search(keyword: $keyword) {
    webtoonResult(first: 12, after: $afterWebtoonId) {
      pageInfo {
        endCursor
        hasNextPage
      }
      edges {
        node {
          ...webtoonCard
        }
      }
    }
  }
}

mutation postCommentForCollectionDetail($collectionId: ID!, $message: String!) {
  postComment(input: { collectionId: $collectionId, message: $message }) {
    ...comment
  }
}

mutation updateCollectionForCollectionDetail(
  $collectionId: ID!
  $title: String!
  $description: String
  $afterWebtoonId: ID
  $afterCommentId: ID
) {
  updateCollection(
    input: {
      collectionId: $collectionId
      title: $title
      description: $description
    }
  ) {
    ...collection
  }
}

mutation AddWebtoonsForCollectionDetail(
  $collectionId: ID!
  $webtoonIds: [ID!]!
  $afterWebtoonId: ID
  $afterCommentId: ID
) {
  updateCollection(
    input: { collectionId: $collectionId, webtoonIds: $webtoonIds }
  ) {
    ...collection
  }
}

mutation likeCollectionForCollectionDetail($collectionId: ID!) {
  likeCollection(collectionId: $collectionId) {
    id
  }
}

mutation deleteCollectionForCollectionDetail($collectionId: ID!) {
  deleteCollection(collectionId: $collectionId) {
    id
    title
  }
}

fragment collection on Collection {
  id
  title
  description
  writer {
    id
    name
  }
  webtoons(first: 8, after: $afterWebtoonId) {
    pageInfo {
      hasNextPage
      endCursor
    }
    edges {
      node {
        ...webtoonCard
      }
    }
  }
  comments(first: 8, after: $afterCommentId) {
    ...commentsConnectionForComments
  }
}
